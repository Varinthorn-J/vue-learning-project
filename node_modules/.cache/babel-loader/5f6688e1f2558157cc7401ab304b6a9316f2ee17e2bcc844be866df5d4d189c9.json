{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      productsList: null,\n      offset: 0,\n      limit: 10,\n      nextOffset: 0\n    };\n  },\n  computed: {\n    displayedProductsList() {\n      if (this.productsList) {\n        return this.productsList;\n        console.log();\n      }\n      return [];\n    }\n  },\n  methods: {\n    getProducts() {\n      const apiKey = 'api-key-test';\n      const requestId = 'test';\n      const apiUrl = 'https://express-api-mslb.onrender.com/products';\n      axios.get(apiUrl, {\n        headers: {\n          'x-api-key': apiKey,\n          'x-request-id': requestId\n        }\n      }).then(response => {\n        this.productsList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    copyProductName(name) {\n      navigator.clipboard.writeText(name).then(() => {\n        console.log('Copied to clipboard:', name);\n      }).catch(error => {\n        console.error('Failed to copy to clipboard:', error);\n      });\n    },\n    editProduct(productId) {\n      const apiKey = 'api-key-test';\n      const requestId = 'test';\n      const apiUrl = `https://express-api-mslb.onrender.com/products/${productId}`;\n      axios.get(apiUrl, {\n        headers: {\n          'x-api-key': apiKey,\n          'x-request-id': requestId\n        }\n      }).then(response => {\n        const productData = response.data;\n        productData.name = 'New Product Name';\n        productData.description = 'New Product Description';\n        productData.price = 99.99;\n        axios.put(apiUrl, productData, {\n          headers: {\n            'x-api-key': apiKey,\n            'x-request-id': requestId,\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          console.log('Product updated successfully:', response.data);\n          this.getProducts();\n        }).catch(error => {\n          console.error('Error updating product:', error);\n        });\n      }).catch(error => {\n        console.error('Error fetching product data:', error);\n      });\n    },\n    deleteProduct(productId) {\n      const apiKey = 'api-key-test';\n      const requestId = 'test';\n      const apiUrl = `https://express-api-mslb.onrender.com/products/${productId}`;\n      axios.delete(apiUrl, {\n        headers: {\n          'x-api-key': apiKey,\n          'x-request-id': requestId\n        }\n      }).then(response => {\n        console.log('Product deleted successfully:', response.data);\n        this.getProducts();\n      }).catch(error => {\n        console.error('Error deleting product:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","productsList","offset","limit","nextOffset","computed","displayedProductsList","console","log","methods","getProducts","apiKey","requestId","apiUrl","get","headers","then","response","catch","error","copyProductName","name","navigator","clipboard","writeText","editProduct","productId","productData","description","price","put","deleteProduct","delete"],"sources":["src/components/GetProduct.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"pokemon-section\">\n      <h3>Product List:</h3>\n      <table class=\"table\" v-if=\"productsList\">\n        <thead>\n          <tr>\n            <th>Product Name</th>\n            <th>Product Description</th>\n            <th>Product Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"product in displayedProductsList\" :key=\"product.id\" class=\"pokemon-item\">\n            <td>{{ product.name }}</td>\n            <td>{{ product.description }}</td>\n            <td>{{ product.price }}</td>\n            <td>\n              <button @click=\"editProduct(product.id)\" class=\"btn-edit\">Edit/Update</button>\n              <button @click=\"deleteProduct(product.id)\" class=\"btn-delete\">Delete</button>\n              <button @click=\"copyProductName(product.name)\" class=\"btn-copy\">Copy</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"button-container\">\n        <button @click=\"getProducts\" class=\"btn-get-pokemon\">Get Products</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      productsList: null,\n      offset: 0,\n      limit: 10,\n      nextOffset: 0,\n    };\n  },\n  computed: {\n    displayedProductsList() {\n      if (this.productsList) {\n        return this.productsList;\n        console.log()\n      }\n      return [];\n    },\n  },\n  methods: {\n    getProducts() {\n      const apiKey = 'api-key-test';\n      const requestId = 'test';\n      const apiUrl = 'https://express-api-mslb.onrender.com/products';\n\n      axios.get(apiUrl, {\n        headers: {\n          'x-api-key': apiKey,\n          'x-request-id': requestId\n        }\n      })\n      .then(response => {\n        this.productsList = response.data;\n      })\n      .catch(error => {\n        console.error(error);\n      });\n    },\n    copyProductName(name) {\n      navigator.clipboard.writeText(name)\n        .then(() => {\n          console.log('Copied to clipboard:', name);\n        })\n        .catch(error => {\n          console.error('Failed to copy to clipboard:', error);\n        });\n    },\n    editProduct(productId) {\n  const apiKey = 'api-key-test';\n  const requestId = 'test';\n  const apiUrl = `https://express-api-mslb.onrender.com/products/${productId}`;\n\n  axios.get(apiUrl, {\n    headers: {\n      'x-api-key': apiKey,\n      'x-request-id': requestId\n    }\n  })\n  .then(response => {\n    const productData = response.data;\n\n    productData.name = 'New Product Name';\n    productData.description = 'New Product Description';\n    productData.price = 99.99;\n\n    axios.put(apiUrl, productData, {\n      headers: {\n        'x-api-key': apiKey,\n        'x-request-id': requestId,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => {\n      console.log('Product updated successfully:', response.data);\n      this.getProducts();\n    })\n    .catch(error => {\n      console.error('Error updating product:', error);\n    });\n  })\n  .catch(error => {\n    console.error('Error fetching product data:', error);\n  });\n},\n\ndeleteProduct(productId) {\n  const apiKey = 'api-key-test';\n  const requestId = 'test';\n  const apiUrl = `https://express-api-mslb.onrender.com/products/${productId}`;\n\n  axios.delete(apiUrl, {\n    headers: {\n      'x-api-key': apiKey,\n      'x-request-id': requestId\n    }\n  })\n  .then(response => {\n    console.log('Product deleted successfully:', response.data);\n  \n    this.getProducts();\n  })\n  .catch(error => {\n    console.error('Error deleting product:', error);\n  });\n},\n  },\n};\n</script>\n\n<style>\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.pokemon-section {\n  margin-bottom: 2rem;\n}\n\n.table {\n  width: 100%;\n  border-collapse: collapse;\n  border: 1px solid #dee2e6;\n  background-color: #f8f9fa;\n}\n\n.table th,\n.table td {\n  padding: 0.75rem;\n  vertical-align: top;\n  border-top: 1px solid #dee2e6;\n}\n\n.table th {\n  font-weight: bold;\n  background-color: #151616;\n  color: #fff;\n  text-align: left;\n}\n\n.table tbody tr:nth-child(even) {\n  background-color: #f8f9fa;\n}\n\n.btn-get-pokemon {\n  background-color: #151616;\n  color: #fff;\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  margin-top: 1rem;\n}\n\n.btn-get-pokemon:hover {\n  background-color: #0056b3;\n}\n\n.btn-copy {\n  background-color: #151616;\n  color: #fff;\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  margin-left: 0.5rem;\n}\n\n.btn-copy:hover {\n  background-color: #3b3b3b;\n}\n\n.btn-edit,\n.btn-delete {\n  background-color: #151616;\n  color: #fff;\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  margin-right: 0.5rem;\n}\n\n.btn-edit:hover,\n.btn-delete:hover {\n  background-color: #3b3b3b;\n}\n</style>\n"],"mappings":"AAkCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,MAAA;MACAC,KAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACAC,sBAAA;MACA,SAAAL,YAAA;QACA,YAAAA,YAAA;QACAM,OAAA,CAAAC,GAAA;MACA;MACA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,MAAAC,MAAA;MACA,MAAAC,SAAA;MACA,MAAAC,MAAA;MAEAd,KAAA,CAAAe,GAAA,CAAAD,MAAA;QACAE,OAAA;UACA,aAAAJ,MAAA;UACA,gBAAAC;QACA;MACA,GACAI,IAAA,CAAAC,QAAA;QACA,KAAAhB,YAAA,GAAAgB,QAAA,CAAAjB,IAAA;MACA,GACAkB,KAAA,CAAAC,KAAA;QACAZ,OAAA,CAAAY,KAAA,CAAAA,KAAA;MACA;IACA;IACAC,gBAAAC,IAAA;MACAC,SAAA,CAAAC,SAAA,CAAAC,SAAA,CAAAH,IAAA,EACAL,IAAA;QACAT,OAAA,CAAAC,GAAA,yBAAAa,IAAA;MACA,GACAH,KAAA,CAAAC,KAAA;QACAZ,OAAA,CAAAY,KAAA,iCAAAA,KAAA;MACA;IACA;IACAM,YAAAC,SAAA;MACA,MAAAf,MAAA;MACA,MAAAC,SAAA;MACA,MAAAC,MAAA,qDAAAa,SAAA;MAEA3B,KAAA,CAAAe,GAAA,CAAAD,MAAA;QACAE,OAAA;UACA,aAAAJ,MAAA;UACA,gBAAAC;QACA;MACA,GACAI,IAAA,CAAAC,QAAA;QACA,MAAAU,WAAA,GAAAV,QAAA,CAAAjB,IAAA;QAEA2B,WAAA,CAAAN,IAAA;QACAM,WAAA,CAAAC,WAAA;QACAD,WAAA,CAAAE,KAAA;QAEA9B,KAAA,CAAA+B,GAAA,CAAAjB,MAAA,EAAAc,WAAA;UACAZ,OAAA;YACA,aAAAJ,MAAA;YACA,gBAAAC,SAAA;YACA;UACA;QACA,GACAI,IAAA,CAAAC,QAAA;UACAV,OAAA,CAAAC,GAAA,kCAAAS,QAAA,CAAAjB,IAAA;UACA,KAAAU,WAAA;QACA,GACAQ,KAAA,CAAAC,KAAA;UACAZ,OAAA,CAAAY,KAAA,4BAAAA,KAAA;QACA;MACA,GACAD,KAAA,CAAAC,KAAA;QACAZ,OAAA,CAAAY,KAAA,iCAAAA,KAAA;MACA;IACA;IAEAY,cAAAL,SAAA;MACA,MAAAf,MAAA;MACA,MAAAC,SAAA;MACA,MAAAC,MAAA,qDAAAa,SAAA;MAEA3B,KAAA,CAAAiC,MAAA,CAAAnB,MAAA;QACAE,OAAA;UACA,aAAAJ,MAAA;UACA,gBAAAC;QACA;MACA,GACAI,IAAA,CAAAC,QAAA;QACAV,OAAA,CAAAC,GAAA,kCAAAS,QAAA,CAAAjB,IAAA;QAEA,KAAAU,WAAA;MACA,GACAQ,KAAA,CAAAC,KAAA;QACAZ,OAAA,CAAAY,KAAA,4BAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}