{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      productsList: null,\n      offset: 0,\n      limit: 10,\n      nextOffset: 0,\n      editMode: false,\n      editedProduct: {\n        id: null,\n        name: '',\n        description: '',\n        price: null\n      }\n    };\n  },\n  computed: {\n    displayedProductsList() {\n      if (this.productsList) {\n        return this.productsList.map(product => ({\n          id: product._id,\n          name: product.prod_name || product.product_name,\n          // Handle both property names\n          description: product.prod_desc || product.product_desc,\n          // Handle both property names\n          price: product.prod_price || product.product_price // Handle both property names\n        }));\n      }\n\n      return [];\n    }\n  },\n  methods: {\n    getProducts() {\n      const apiKey = 'api-key-test';\n      const apiUrl = 'https://express-api-mslb.onrender.com/products';\n      axios.get(apiUrl, {\n        headers: {\n          'x-api-key': apiKey\n        }\n      }).then(response => {\n        console.log('Response:', response.data);\n        this.productsList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    copyProductName(name) {\n      navigator.clipboard.writeText(name).then(() => {\n        console.log('Copied to clipboard:', name);\n      }).catch(error => {\n        console.error('Failed to copy to clipboard:', error);\n      });\n    },\n    editProduct(product) {\n      this.editMode = true;\n      this.editedProduct.id = product.id;\n      this.editedProduct.name = product.name;\n      this.editedProduct.description = product.description;\n      this.editedProduct.price = product.price;\n    },\n    updateProduct() {\n      const apiKey = 'api-key-test';\n      const requestId = 'test';\n      const apiUrl = `https://express-api-mslb.onrender.com/products/${this.editedProduct.id}`;\n      axios.put(apiUrl, this.editedProduct, {\n        headers: {\n          'x-api-key': apiKey,\n          'x-request-id': requestId,\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log('Product updated successfully:', response.data);\n        this.getProducts();\n        this.editMode = false;\n        this.clearEditedProduct();\n      }).catch(error => {\n        console.error('Error updating product:', error);\n      });\n    },\n    deleteProduct(productId) {\n      const apiKey = 'api-key-test';\n      const requestId = 'test';\n      const apiUrl = `https://express-api-mslb.onrender.com/products/${productId}`;\n      axios.delete(apiUrl, {\n        headers: {\n          'x-api-key': apiKey,\n          'x-request-id': requestId\n        }\n      }).then(response => {\n        console.log('Product deleted successfully:', response.data);\n        this.getProducts();\n      }).catch(error => {\n        console.error('Error deleting product:', error);\n      });\n    },\n    clearEditedProduct() {\n      this.editedProduct.id = null;\n      this.editedProduct.name = '';\n      this.editedProduct.description = '';\n      this.editedProduct.price = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","productsList","offset","limit","nextOffset","editMode","editedProduct","id","name","description","price","computed","displayedProductsList","map","product","_id","prod_name","product_name","prod_desc","product_desc","prod_price","product_price","methods","getProducts","apiKey","apiUrl","get","headers","then","response","console","log","catch","error","copyProductName","navigator","clipboard","writeText","editProduct","updateProduct","requestId","put","clearEditedProduct","deleteProduct","productId","delete"],"sources":["src/components/GetProduct.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"pokemon-section\">\n      <h3>Product List:</h3>\n      <table class=\"table\" v-if=\"productsList\">\n        <thead>\n          <tr>\n            <th>Product Name</th>\n            <th>Product Description</th>\n            <th>Product Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"product in displayedProductsList\" :key=\"product.id\" class=\"pokemon-item\">\n            <td>{{ product.name }}</td>\n            <td>{{ product.description }}</td>\n            <td>{{ product.price }}</td>\n            <td>\n              <button @click=\"editProduct(product)\" class=\"btn-edit\">Edit/Update</button>\n              <button @click=\"deleteProduct(product.id)\" class=\"btn-delete\">Delete</button>\n              <button @click=\"copyProductName(product.name)\" class=\"btn-copy\">Copy</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"button-container\">\n        <button @click=\"getProducts()\" class=\"btn-get-pokemon\">Get Products</button>\n      </div>\n      <div class=\"form-container\" v-if=\"editMode\">\n        <h3>Edit Product:</h3>\n        <form @submit.prevent=\"updateProduct\">\n          <div class=\"form-group\">\n            <label for=\"productName\">Product Name:</label>\n            <input type=\"text\" id=\"productName\" v-model=\"editedProduct.name\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"productDescription\">Product Description:</label>\n            <textarea id=\"productDescription\" v-model=\"editedProduct.description\" required></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"productPrice\">Product Price:</label>\n            <input type=\"number\" id=\"productPrice\" v-model=\"editedProduct.price\" required>\n          </div>\n          <button type=\"submit\">Update Product</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      productsList: null,\n      offset: 0,\n      limit: 10,\n      nextOffset: 0,\n      editMode: false,\n      editedProduct: {\n        id: null,\n        name: '',\n        description: '',\n        price: null\n      }\n    };\n  },\n  computed: {\n    displayedProductsList() {\n      if (this.productsList) {\n        return this.productsList.map(product => ({\n          id: product._id,\n          name: product.prod_name || product.product_name, // Handle both property names\n          description: product.prod_desc || product.product_desc, // Handle both property names\n          price: product.prod_price || product.product_price // Handle both property names\n        }));\n      }\n      return [];\n    },\n  },\n  methods: {\n    getProducts() {\n      const apiKey = 'api-key-test';\n      const apiUrl = 'https://express-api-mslb.onrender.com/products';\n\n      axios.get(apiUrl, {\n        headers: {\n          'x-api-key': apiKey\n        }\n      })\n        .then(response => {\n          console.log('Response:', response.data);\n          this.productsList = response.data;\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    copyProductName(name) {\n      navigator.clipboard.writeText(name)\n        .then(() => {\n          console.log('Copied to clipboard:', name);\n        })\n        .catch(error => {\n          console.error('Failed to copy to clipboard:', error);\n        });\n    },\n    editProduct(product) {\n      this.editMode = true;\n      this.editedProduct.id = product.id;\n      this.editedProduct.name = product.name;\n      this.editedProduct.description = product.description;\n      this.editedProduct.price = product.price;\n    },\n    updateProduct() {\n      const apiKey = 'api-key-test';\n      const requestId = 'test';\n      const apiUrl = `https://express-api-mslb.onrender.com/products/${this.editedProduct.id}`;\n\n      axios.put(apiUrl, this.editedProduct, {\n        headers: {\n          'x-api-key': apiKey,\n          'x-request-id': requestId,\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(response => {\n          console.log('Product updated successfully:', response.data);\n          this.getProducts();\n          this.editMode = false;\n          this.clearEditedProduct();\n        })\n        .catch(error => {\n          console.error('Error updating product:', error);\n        });\n    },\n    deleteProduct(productId) {\n      const apiKey = 'api-key-test';\n      const requestId = 'test';\n      const apiUrl = `https://express-api-mslb.onrender.com/products/${productId}`;\n\n      axios.delete(apiUrl, {\n        headers: {\n          'x-api-key': apiKey,\n          'x-request-id': requestId\n        }\n      })\n        .then(response => {\n          console.log('Product deleted successfully:', response.data);\n\n          this.getProducts();\n        })\n        .catch(error => {\n          console.error('Error deleting product:', error);\n        });\n    },\n    clearEditedProduct() {\n      this.editedProduct.id = null;\n      this.editedProduct.name = '';\n      this.editedProduct.description = '';\n      this.editedProduct.price = null;\n    }\n  },\n};\n</script>\n\n<style>\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.pokemon-section {\n  margin-bottom: 2rem;\n}\n\n.table {\n  width: 100%;\n  border-collapse: collapse;\n  border: 1px solid #dee2e6;\n  background-color: #f8f9fa;\n}\n\n.table th,\n.table td {\n  padding: 0.75rem;\n  vertical-align: top;\n  border-top: 1px solid #dee2e6;\n}\n\n.table th {\n  font-weight: bold;\n  background-color: #151616;\n  color: #fff;\n  text-align: left;\n}\n\n.table tbody tr:nth-child(even) {\n  background-color: #f8f9fa;\n}\n\n.btn-get-pokemon {\n  background-color: #151616;\n  color: #fff;\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  margin-top: 1rem;\n}\n\n.btn-get-pokemon:hover {\n  background-color: #0056b3;\n}\n\n.btn-copy {\n  background-color: #151616;\n  color: #fff;\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  margin-left: 0.5rem;\n}\n\n.btn-copy:hover {\n  background-color: #3b3b3b;\n}\n\n.btn-edit,\n.btn-delete {\n  background-color: #151616;\n  color: #fff;\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  margin-right: 0.5rem;\n}\n\n.btn-edit:hover,\n.btn-delete:hover {\n  background-color: #3b3b3b;\n}\n\n.form-container {\n  margin-top: 2rem;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\nform input[type=\"text\"],\nform textarea,\nform input[type=\"number\"] {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n}\n\nform button[type=\"submit\"] {\n  background-color: #151616;\n  color: #fff;\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n}\n\nform button[type=\"submit\"]:hover {\n  background-color: #3b3b3b;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}