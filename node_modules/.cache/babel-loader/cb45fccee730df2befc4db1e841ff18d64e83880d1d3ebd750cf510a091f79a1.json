{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      form: {\n        zip: ''\n      },\n      productsData: null,\n      productsDataError: ''\n    };\n  },\n  methods: {\n    submitForm() {\n      const apiKey = 'api-key-test';\n      const apiUrl = `https://express-api-mslb.onrender.com/products&appid=${apiKey}`;\n      axios.get(apiUrl).then(response => {\n        this.productsData = response.data;\n        const formattedData = response.data.map(item => {\n          return {\n            id: item._id,\n            name: item.prod_name || item.product_name,\n            description: item.prod_desc || item.product_desc,\n            price: item.prod_price || item.product_price,\n            updatedAt: item.updated_at,\n            createdAt: item.created_at\n          };\n        });\n        console.log(formattedData);\n      }).catch(error => {\n        console.error(error);\n        this.productsDataError = error.response.data;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","form","zip","productsData","productsDataError","methods","submitForm","apiKey","apiUrl","get","then","response","formattedData","map","item","id","_id","name","prod_name","product_name","description","prod_desc","product_desc","price","prod_price","product_price","updatedAt","updated_at","createdAt","created_at","console","log","catch","error"],"sources":["src/components/getProduct.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <div class=\"weather-section\">\n        <h3>Current weather data</h3>\n        <div class=\"weather-data\" v-if=\"productsData !== null\">\n          <h1>{{ productsData.name }}</h1>\n          <!-- Assuming description is an array -->\n          <p>{{ productsData.description[0].description }}</p>\n        </div>\n        <div class=\"weather-data-error\" v-else>\n          <p>{{ productsDataError }}</p>\n        </div>\n      </div>\n      <form @submit.prevent=\"submitForm\" class=\"weather-form\">\n        <div class=\"form-group\">\n          <label for=\"zip\">zip code thailand</label>\n          <input type=\"text\" id=\"zip\" v-model=\"form.zip\" required class=\"form-input\" placeholder=\"Enter zip code\">\n        </div>\n        <button type=\"submit\" class=\"btn-submit\">Submit</button>\n      </form>\n    </div>\n  </template>\n  \n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        form: {\n          zip: '',\n        },\n        productsData: null,\n        productsDataError: '',\n      };\n    },\n    methods: {\n      submitForm() {\n        const apiKey = 'api-key-test';\n        const apiUrl = `https://express-api-mslb.onrender.com/products&appid=${apiKey}`;\n  \n        axios.get(apiUrl)\n          .then(response => {\n            this.productsData = response.data;\n  \n            const formattedData = response.data.map(item => {\n              return {\n                id: item._id,\n                name: item.prod_name || item.product_name,\n                description: item.prod_desc || item.product_desc,\n                price: item.prod_price || item.product_price,\n                updatedAt: item.updated_at,\n                createdAt: item.created_at\n              };\n            });\n  \n            console.log(formattedData);\n          })\n          .catch(error => {\n            console.error(error);\n            this.productsDataError = error.response.data;\n          });\n      },\n    },\n  };\n  </script>\n  \n  <style>\n  .container {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 2rem;\n  }\n  \n  .weather-section {\n    margin-bottom: 2rem;\n  }\n  \n  .weather-data {\n    text-align: center;\n  }\n  \n  .weather-image {\n    max-width: 600px;\n    margin-top: 1rem;\n  }\n  \n  .weather-data-error {\n    text-align: center;\n    color: rgb(0, 0, 0);\n  }\n  \n  .weather-form {\n    margin-bottom: 2rem;\n  }\n  \n  .form-group {\n    margin-bottom: 1rem;\n  }\n  \n  .form-input {\n    width: 100%;\n    padding: 0.5rem;\n    font-size: 1rem;\n  }\n  \n  .btn-submit {\n    background-color: #212a9c;\n    color: #fff;\n    border: none;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n  }\n  \n  .btn-submit:hover {\n    background-color: #4e56be;\n  }\n  </style>\n  "],"mappings":"AAyBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,GAAA;MACA;MACAC,YAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,MAAAC,MAAA;MACA,MAAAC,MAAA,2DAAAD,MAAA;MAEAR,KAAA,CAAAU,GAAA,CAAAD,MAAA,EACAE,IAAA,CAAAC,QAAA;QACA,KAAAR,YAAA,GAAAQ,QAAA,CAAAX,IAAA;QAEA,MAAAY,aAAA,GAAAD,QAAA,CAAAX,IAAA,CAAAa,GAAA,CAAAC,IAAA;UACA;YACAC,EAAA,EAAAD,IAAA,CAAAE,GAAA;YACAC,IAAA,EAAAH,IAAA,CAAAI,SAAA,IAAAJ,IAAA,CAAAK,YAAA;YACAC,WAAA,EAAAN,IAAA,CAAAO,SAAA,IAAAP,IAAA,CAAAQ,YAAA;YACAC,KAAA,EAAAT,IAAA,CAAAU,UAAA,IAAAV,IAAA,CAAAW,aAAA;YACAC,SAAA,EAAAZ,IAAA,CAAAa,UAAA;YACAC,SAAA,EAAAd,IAAA,CAAAe;UACA;QACA;QAEAC,OAAA,CAAAC,GAAA,CAAAnB,aAAA;MACA,GACAoB,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;QACA,KAAA7B,iBAAA,GAAA6B,KAAA,CAAAtB,QAAA,CAAAX,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}